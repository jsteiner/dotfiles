" Bind :W to :w
command! W w

" Bind :Q to :q
command! Q q

" Clipboard
"""""""""""
set clipboard=unnamed " use system clipboard


" Movement
""""""""""

" j and k move through wrapped lines
nmap j gj
nmap k gk

" Formatting
""""""""""""

" Reindent file and return to current line
map <leader>i mmgg=G`m<cr>
" Rehash with 1.9 style hash syntax
nmap <leader>rh :%s/:\([^ ]*\)\(\s*\)=>/\1:/g<cr>



" Visual
""""""""

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

set shiftround    " When at 3 spaces and I hit >>, go to 4, not 5.

" Open new splits the the right and bottom. More natural than the default
set splitbelow
set splitright

" Scrolling
set scrolloff=8   "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1


" Other
"""""""

set visualbell " No sounds

" delete ruby comments
nmap <leader>c :%s/^\s*#.*$//g<CR>:%s/\(\n\)\n\+/\1/g<CR>:nohl<CR>gg

" Like bufdo but restore the current buffer.
function! BufDo(command)
  let currBuff=bufnr("%")
  execute 'bufdo ' . a:command
  execute 'buffer ' . currBuff
endfunction
com! -nargs=+ -complete=command Bufdo call BufDo(<q-args>)
